services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend:/app

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=portfolio
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - fileguard
      - postgres
      - redis
      - minio
    networks:
      - app-network
    volumes:
      - ./backend:/var/www
      
  queue-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90 --verbose
    depends_on:
      - redis
      - backend
    volumes:
      - ./backend:/var/www
    networks:
      - app-network


  fileguard:
    build:
      context: ./fileGuard
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8080"
    depends_on:
      - redis
    networks:
      - app-network

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5431:5432"
    networks:
      - app-network
      
  uploadservice:
    build:
      context: ./uploadservice
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "3000:8080"
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    image: redis:7.2-alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
      
  backend-nginx:
    image: nginx:alpine
    ports:
      - "8001:8080"
    volumes:
      - ./backend:/var/www
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - redis
    networks:
      - app-network
      
  minio:
    image: quay.io/minio/minio:RELEASE.2025-02-03T21-03-04Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  minio-data:
